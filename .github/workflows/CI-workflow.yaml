name: CI pipeline
on:
  push:
    branches:
      - 'main'
    paths:
      - "Dockerfile"
      - "vulnerable-flask-app.py"
      - "requirements.txt"  # Ajout de "requirements.txt" ici

jobs:
  scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - name: checkout
        uses: actions/checkout@v2  # Utilisation de actions/checkout@v2
        with:
          ref: '${{ github.ref }}'  # Utilisation de github.ref
          token: ${{ secrets.GITHUB_TOKEN }}  # Utilisation de secrets.GITHUB_TOKEN

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install semgrep
          if [ -f ./requirements.txt ]; then pip install -r ./requirements.txt; fi  # Utilisation de "requirements.txt"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image from Dockerfile
        run: |
          docker build -t test_${{ github.run_number }}:v1 .

      - name: Login to Docker Hub
        uses: docker/login-action@v1  # Utilisation de docker/login-action@v1
        with:
          username: Phenix19
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utilisation de secrets pour le mot de passe

      - name: Push Image
        run: |
          docker tag test_${{ github.run_number }}:v1 Phenix19/DevSecOpsLab:v${{ github.run_number }}
          docker push Phenix19/DevSecOpsLab:v${{ github.run_number }}

      - name: Checkout the ENV Repo
        uses: actions/checkout@v2  # Utilisation de actions/checkout@v2
        with:
          repository: 'Phenix19/DevSecOpsLab'
          ref: 'main'
          token: ${{ secrets.GITHUB_TOKEN }}  # Utilisation de secrets.GITHUB_TOKEN

      - name: Set up YQ command
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64.tar.gz -O - | sudo tar xz && sudo mv yq_linux_amd64 /usr/bin/yq

      - name: Edit manifests in ENV repo
        run: |
          yq eval -i '.spec.template.spec.containers[0].image = "Phenix19/DevSecOpsLab:v${{ github.run_number }}"' ./kubernetes/deployment.yaml

      - name: Commit and Push to ENV repo
        run: |
          git config  user.email "madreldieny@gmail.com"
          git config  user.name "Phenix19"
          git commit -a -m 'Env file is updated with the new image ${{ github.ref }}'
          git push https://Phenix19:${{ secrets.GITHUB_TOKEN }}@github.com/Phenix19/DevSecOpsLab.git
